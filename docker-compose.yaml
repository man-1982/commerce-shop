services:
  db:
    image: postgres:17
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports: ["5432:5432"]
    volumes: [ "dbdata:/var/lib/postgresql/data" ]
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 5s
      timeout: 5s
      retries: 20
    networks:
      - shopnet

  api:
    image: node:22-alpine                       # use existing Node 22 image
    working_dir: /app
    volumes:
      - .:/app                                  # your source
      - pnpm-store:/root/.local/share/pnpm      # cache pnpm store
    environment:
      NODE_ENV: development
      PORT: ${PORT}
      JWT_SECRET: ${JWT_SECRET}
      JWT_EXPIRES: ${JWT_EXPIRES}
      DATABASE_URL: postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db:5432/${POSTGRES_DB}
    # Enable corepack, activate pnpm@packageManager, install deps, start Nest dev server
    command: >
      sh -c "npm ci  && npm run build && npm run start"
    ports: ["${PORT}:${PORT}"]
    depends_on:
      db:
        condition: service_healthy
    networks:
      - shopnet

  prisma-studio:
    image: node:22-alpine
    working_dir: /app
    volumes:
      - .:/app
    environment:
      DATABASE_URL: postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db:5432/${POSTGRES_DB}
    command: sh -c "npx prisma studio"
    ports: ["5555:5555"]
    depends_on:
      db:
        condition: service_healthy
      api:
        condition: service_started
    networks:
      - shopnet

networks:
  shopnet:

volumes:
  dbdata:
  pnpm-store:
